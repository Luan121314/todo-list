{"version":3,"sources":["components/Task/index.tsx","manifest.ts","components/NavBar/index.tsx","Layout/index.tsx","components/Modal/index.tsx","services/api.ts","Modals/CreateTask/index.tsx","pages/Home/index.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Task","id","taskName","timestamp","onDelete","onDone","timestampRelative","formatRelative","Date","locale","ptBR","Alert","variant","className","ButtonGroup","aria-label","Button","onClick","manifest","title","subTitle","phrase","baseURL","NavBar","bg","expand","Brand","href","Toggle","aria-controls","Collapse","Form","FormControl","type","placeholder","Layout","children","ModalForm","nameButton","nameButtonExecute","onExecute","useState","show","setShow","handleClose","Modal","onHide","backdrop","keyboard","Header","closeButton","Title","Body","Footer","api","axios","create","CreateTask","nameTask","setNameTask","post","then","error","console","log","Group","controlId","Label","name","value","onChange","e","target","Home","tasks","setTasks","handleDeleteTask","handleDoneTask","delete","useEffect","get","response","data","Jumbotron","fluid","Container","map","task","index","key","Spinner","animation","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ed01176a.chunk.js","sourcesContent":["import React from 'react';\nimport { formatRelative } from 'date-fns';\nimport { ptBR } from 'date-fns/locale';\nimport { Alert, Button, ButtonGroup } from 'react-bootstrap';\nimport { TaskComponentProps } from '../../interfaces';\n\nconst Task = ({ id, taskName, timestamp, onDelete, onDone }: TaskComponentProps): JSX.Element => {\n    const timestampRelative = formatRelative(timestamp, new Date(), { locale: ptBR });\n\n    function handleOnDelete() {\n        onDelete({ id });\n    }\n    function handleOnDone() {\n        onDone({ id });\n    }\n\n    return (\n        <Alert key={id} variant=\"primary\" className=\"d-flex justify-content-between align-items-center\">\n            <div className=\"information-task\">\n                <span>{taskName}</span>\n                <p>{`Registrado ${timestampRelative}`}</p>\n            </div>\n            <ButtonGroup aria-label={`ButtonGroup-${taskName}`}>\n                <Button key={`ButtonDone-${taskName}`} onClick={handleOnDone} variant=\"success\">\n                    Feito\n                </Button>\n                <Button key={`ButtonDelete-${taskName}`} onClick={handleOnDelete} variant=\"danger\">\n                    Excluir\n                </Button>\n            </ButtonGroup>\n        </Alert>\n    );\n};\n\nexport default Task;\n","const manifest = {\n    title: 'Todo App',\n    subTitle: 'Gerencie suas tarefas',\n    phrase: 'Organizar-se Ã© fundamental para o sucesso.',\n    baseURL: 'http://localhost:3333',\n};\n\nexport default manifest;\n","import React from 'react';\nimport { Button, Form, FormControl, Navbar as NavBarBootstrap } from 'react-bootstrap';\nimport manifest from '../../manifest';\n\nconst NavBar = (): JSX.Element => {\n    return (\n        <NavBarBootstrap bg=\"light\" expand=\"lg\">\n            <NavBarBootstrap.Brand href=\"#home\">{manifest.title}</NavBarBootstrap.Brand>\n            <NavBarBootstrap.Toggle aria-controls=\"basic-navbar-nav\" />\n            <NavBarBootstrap.Collapse id=\"basic-navbar-nav\" className=\"justify-content-between\">\n                <div />\n                <Form className=\"d-flex\">\n                    <FormControl type=\"text\" placeholder=\"Search\" className=\"mr-sm-2\" />\n                    <Button variant=\"outline-success\">Search</Button>\n                </Form>\n            </NavBarBootstrap.Collapse>\n        </NavBarBootstrap>\n    );\n};\n\nexport default NavBar;\n","import React from 'react';\nimport NavBar from '../components/NavBar';\n\ninterface LayoutProps {\n    children?: React.ReactNode;\n}\n\nconst Layout = ({ children }: LayoutProps): JSX.Element => {\n    return (\n        <>\n            <NavBar />\n            {children}\n        </>\n    );\n};\n\nexport default Layout;\n","import React, { useState } from 'react';\nimport { Button, Modal } from 'react-bootstrap';\n\ninterface ModalFormProps {\n    nameButton: string;\n    nameButtonExecute: string;\n    title: string;\n    children?: React.ReactNode;\n    onExecute: <T>(props: T) => void;\n}\n\nconst ModalForm = ({ nameButton, nameButtonExecute, title, children, onExecute }: ModalFormProps): JSX.Element => {\n    const [show, setShow] = useState(false);\n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n    function handleOnExecute() {\n        onExecute(null);\n        handleClose();\n    }\n    return (\n        <>\n            <Button variant=\"primary\" onClick={handleShow}>\n                {nameButton}\n            </Button>\n            <Modal show={show} onHide={handleClose} backdrop=\"static\" key={`modal-${title}`} keyboard={false}>\n                <Modal.Header closeButton>\n                    <Modal.Title>{title}</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>{children}</Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"danger\" onClick={handleClose}>\n                        Cancelar\n                    </Button>\n                    <Button variant=\"success\" onClick={handleOnExecute}>\n                        {nameButtonExecute}\n                    </Button>\n                </Modal.Footer>\n            </Modal>\n        </>\n    );\n};\n\nexport default ModalForm;\n","import axios from 'axios';\nimport manifest from '../manifest';\n\nconst api = axios.create({\n    baseURL: manifest.baseURL,\n});\n\nexport default api;\n","import React, { useState } from 'react';\nimport { Form, FormControl } from 'react-bootstrap';\nimport ModalForm from '../../components/Modal';\nimport api from '../../services/api';\n\nconst CreateTask = (): JSX.Element => {\n    const [nameTask, setNameTask] = useState('');\n    function handleCreateTask() {\n        try {\n            api.post('tasks', { nameTask }).then();\n        } catch (error) {\n            console.log('Error post data');\n        }\n    }\n\n    return (\n        <ModalForm\n            title=\"Criar Tarefa\"\n            nameButton=\"Criar Tarefa\"\n            nameButtonExecute=\"Criar\"\n            onExecute={handleCreateTask}\n        >\n            <Form.Group controlId=\"createTaskControl\">\n                <Form.Label>Nome da tarefa</Form.Label>\n                <FormControl\n                    type=\"text\"\n                    name=\"taskName\"\n                    value={nameTask}\n                    onChange={(e) => setNameTask(e.target.value)}\n                />\n            </Form.Group>\n        </ModalForm>\n    );\n};\n\nexport default CreateTask;\n","import React, { useEffect, useState } from 'react';\nimport { Container, Jumbotron, Spinner } from 'react-bootstrap';\nimport Task from '../../components/Task';\nimport { ManagerTaksParamsProps, TaskProps } from '../../interfaces';\nimport Layout from '../../Layout';\nimport manifest from '../../manifest';\nimport CreateTask from '../../Modals/CreateTask';\nimport api from '../../services/api';\n\nconst Home = (): JSX.Element => {\n    const [tasks, setTasks] = useState<TaskProps[]>();\n\n    function handleDeleteTask({ id }: ManagerTaksParamsProps) {\n        console.log('Delete task id: ', id);\n    }\n\n    function handleDoneTask({ id }: ManagerTaksParamsProps) {\n        api.delete(`tasks/${id}`);\n    }\n\n    function handlerLoadData() {\n        api.get<TaskProps[]>('tasks').then((response) => {\n            setTasks(response.data);\n        });\n    }\n    useEffect(handlerLoadData, []);\n\n    if (!tasks) {\n        return (\n            <Container>\n                <Spinner animation=\"grow\" title=\"loading\" />\n                <span>loading</span>\n            </Container>\n        );\n    }\n\n    return (\n        <Layout>\n            <Jumbotron fluid>\n                <Container>\n                    <div className=\"d-flex justify-content-between align-items-center\">\n                        <div>\n                            <h1>{manifest.subTitle}</h1>\n                            <p>{manifest.phrase}</p>\n                        </div>\n                        <CreateTask />\n                    </div>\n                </Container>\n            </Jumbotron>\n            {tasks?.map((task, index) => (\n                <Task {...task} key={index} onDelete={handleDeleteTask} onDone={handleDoneTask} />\n            ))}\n        </Layout>\n    );\n};\n\nexport default Home;\n","import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Home from './pages/Home';\n\nfunction App(): JSX.Element {\n    return (\n        <div className=\"container-fluid\">\n            <Home />\n        </div>\n    );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler): void => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n            getCLS(onPerfEntry);\n            getFID(onPerfEntry);\n            getFCP(onPerfEntry);\n            getLCP(onPerfEntry);\n            getTTFB(onPerfEntry);\n        });\n    }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root'),\n);\n\nreportWebVitals();\n"],"sourceRoot":""}